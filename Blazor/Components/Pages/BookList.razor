@page "/books"
@using Blazor.Models
@using Blazor.Services
@inject NavigationManager Navigation
@inject BookService BookService
@rendermode InteractiveServer
<h3>Book List</h3>
@*Sets up how the original page looks with the add,delete,update buttons.*@
<button class="btn btn-success" @onclick="AddBook">Add Book</button>

<table class="table">
    <thead>
        <tr>
            <th>Title</th>
            <th>Author</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var book in books)
        {
            <tr>
                <td>@book.Title</td>
                <td>@book.Author</td>
                <td>
                    <button class="btn btn-primary" @onclick="() => EditBook(book.Id)">Edit</button>
                    <button class="btn btn-danger" @onclick="() => DeleteBook(book.Id)">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    private List<Book> books;

    protected override void OnInitialized()
    {
        books = BookService.GetBooks();
    }
    //navigation to other pages to add/edit
    private void AddBook()
    {
        Console.WriteLine("Navigation to Add Book triggered");
        Navigation.NavigateTo("/add-book");
        StateHasChanged();
    }

    private void EditBook(int id)
    {
        Console.WriteLine($"Navigation to Edit Book {id} triggered");
        Navigation.NavigateTo($"/edit-book/{id}");
        StateHasChanged();
    }

    private void DeleteBook(int id)
    {
        BookService.DeleteBook(id);
        //renews the book view after deletion
        books = BookService.GetBooks();
    }
}
